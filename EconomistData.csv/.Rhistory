ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_color_manual(
values = c('A' = '#70D500',
'B' = 'white',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#62FAE6',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()
dat <- read.csv("dataSets/EconomistData.csv")
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_color_manual(
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#62FAE6',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_color_manual(
names = ''
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#62FAE6',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_color_manual(
names = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#62FAE6',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_color_manual(
name = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#62FAE6',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_colour_manual(
name = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#62FAE6',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_fill_manual(
name = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#62FAE6',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_fill_manual(
name = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#4A72FA',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()
ggplot(lego, aes(x, y, color = x))+
geom_col()+
scale_color_manual(
name = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#62FAE6',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_fill_manual(
name = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#4A72FA',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()+
xlab("")
?scale_x_discrete
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_fill_manual(
name = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#4A72FA',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()+
scale_x_discrete(labels = NULL)
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_fill_manual(
name = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#4A72FA',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()+
scale_x_discrete("",labels = NULL)
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_fill_manual(
name = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#4A72FA',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()+
scale_x_discrete("",labels = NULL)+
scale_y_discrete("",
labels = NULL)
?legend
ggplot(lego, aes(x, y, fill = x))+
geom_col()+
scale_fill_manual(
name = '',
values = c('A' = '#70D500',
'B' = '#E0EAEC',
'C' = '#EB6A74',
'D' = '#F7F252',
'E' = '#4A72FA',
'F' = '#70FFDC',
'G' = '#FA7D26')
)+
theme_classic()+
scale_x_discrete("",
labels = NULL)+
scale_y_discrete("",
labels = NULL)+
theme(legend.position = "none")
dat <- read.csv("dataSets/EconomistData.csv")
## A look at all 25 symbols
df2 <- data.frame(x = 1:5 , y = 1:25, z = 1:25)
s <- ggplot(df2, aes(x = x, y = y))
s + geom_point(aes(shape = z), size = 4) + scale_shape_identity()
## A look at all 25 symbols
df2 <- data.frame(x = 1:5 , y = 1:25, z = 1:25)
lb
library(tidyverse)
s <- ggplot(df2, aes(x = x, y = y))
s + geom_point(aes(shape = z), size = 4) + scale_shape_identity()
## While all symbols have a foreground colour, symbols 19-25 also take a
## background colour (fill)
s + geom_point(aes(shape = z), size = 4, colour = "Red") +
scale_shape_identity()
s + geom_point(aes(shape = z), size = 4, colour = "Red", fill = "Black") +
scale_shape_identity()
pc2 +
geom_point(shape = 1, size = 4)
dat <- read.csv("https://github.com/IQSS/dss-workshops-archived/blob/master/R/Rgraphics/dataSets/EconomistData.csv")
View(dat)
dat <- read_csv("https://github.com/IQSS/dss-workshops-archived/blob/master/R/Rgraphics/dataSets/EconomistData.csv")
View(dat)
health <- read.csv("https://raw.githubusercontent.com/selva86/datasets/master/health.csv")
View(health)
setwd("C:/Users/terry/Documents/我爱学习/统计软件/R/R脚本")
dat <- read.csv("dataSets/EconomistData.csv")
dat <- read_csv("EconomistData.csv")
dat <- read.csv("EconomistData.csv")
setwd("C:/Users/terry/Documents/我爱学习/统计软件/R/R脚本")
dat <- read.csv("EconomistData.csv")
setwd("C:/Users/terry/Documents/我爱学习/统计软件/R/R脚本/\EconomistData.csv")
dat <- read.csv("EconomistData.csv")
setwd("C:/Users/terry/Documents/我爱学习/统计软件/R/R脚本/EconomistData.csv")
dat <- read.csv("EconomistData.csv")
View(dat)
dat <- read_csv("EconomistData.csv")
pc1 <- ggplot(dat, aes(x = CPI, y = HDI, color = Region))
pc1 + geom_point()
#添加趋势线
pc2 <- pc1 +
geom_smooth(mapping = aes(linetype = "r2"),
method = "lm",
formula = y ~ x + log(x),
se = F,
color = "red")
pc2+geom_point()
pc2 +
geom_point(shape = 1, size = 4)
(pc3 <- pc2 + geom_point(shape = 1, size = 2.5, stroke = 1.25))
(pc3 <- pc2 + geom_point(shape = 1, size = 2.5, stroke = 10))
(pc3 <- pc2 + geom_point(shape = 1, size = 2.5, stroke = 1.25))
#标签
pointsToLabel <- c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan",
"Afghanistan", "Congo", "Greece", "Argentina", "Brazil",
"India", "Italy", "China", "South Africa", "Spane",
"Botswana", "Cape Verde", "Bhutan", "Rwanda", "France",
"United States", "Germany", "Britain", "Barbados", "Norway", "Japan",
"New Zealand", "Singapore")
#使用geom_text来标记
(pc4 <- pc3 +
geom_text(aes(label = Country),
color = "gray20",
data = subset(dat, Country %in% pointsToLabel)))
library("ggrepel")
(pc4 <- pc3 +
geom_text_repel(aes(label = Country),
color = "gray20",
data = subset(dat,
Country %in% pointsToLabel),
force = 10))
(pc4 <- pc3 +
geom_text_repel(aes(label = Country),
color = "gray20",
data = subset(dat,
Country %in% pointsToLabel),
force = 20))
#将我们的图表与原始图表比较，
#我们注意到颜色图例中region的标签和顺序不同。
#为了纠正这个问题，
#我们需要改变region变量的标签和顺序。
#我们可以用这个factor功能来做到这一点。
dat$Region <- factor(dat$Region,
levels = c("EU W. Europe",
"Americas",
"Asia Pacific",
"East EU Cemt Asia",
"MENA",
"SSA"),
labels = c("OECD",
"Americas",
"Asia &/nOceania",
"Central &/nEastern Europe",
"Middle East &/nnorth Africa",
"Sub-Saharan/nAfrica"))
#现在，当我们使用这些数据构建绘图时，
#顺序应该像初始那样出现。
pc4$data <- dat
pc4
#添加标题和坐标轴
library(grid)
(pc5 <- pc4 +
scale_x_continuous(name = "Corruption Perceptions Index, 2011 (10=least corrupt)",
limits = c(.9, 10.5),#好像ggplot里的xmin和xmax
breaks = 1:10) +
scale_y_continuous(name = "Human Development Index, 2011 (1=Best)",
limits = c(0.2, 1.0),
breaks = seq(0.2, 1.0, by = 0.1)) +
scale_color_manual(name = "",
values = c("#24576D",
"#099DD7",
"#28AADC",
"#248E84",
"#F2583F",
"#96503F")) +
ggtitle("Corruption and Human development"))
library(grid) # for the 'unit' function
(pc6 <- pc5 +
theme_minimal() + # start with a minimal theme and add what we need
theme(text = element_text(color = "gray20"),
legend.position = c("top"), # position the legend in the upper left
legend.direction = "horizontal",
legend.justification = 0.1, # anchor point for legend.position.
legend.text = element_text(size = 11, color = "gray10"),
axis.text = element_text(face = "italic"),
axis.title.x = element_text(vjust = -1), # move title away from axis
axis.title.y = element_text(vjust = 2), # move away for axis
axis.ticks.y = element_blank(), # element_blank() is how we remove elements
axis.line = element_line(color = "gray40", size = 0.5),
axis.line.y = element_blank(),
panel.grid.major = element_line(color = "gray50", size = 0.5),
panel.grid.major.x = element_blank()
))
mR2 <- summary(lm(HDI ~ CPI + log(CPI), data = dat))$r.squared
mR2 <- paste0(format(mR2, digits = 2), "%")
p <- ggplot(dat,
mapping = aes(x = CPI, y = HDI)) +
geom_point(mapping = aes(color = Region),
shape = 1,
size = 4,
stroke = 1.5) +
geom_smooth(mapping = aes(linetype = "r2"),
method = "lm",
formula = y ~ x + log(x), se = FALSE,
color = "red") +
geom_text_repel(mapping = aes(label = Country, alpha = labels),
data = transform(dat,
labels = Country %in% c("Russia",
"Venezuela",
"Iraq",
"Mayanmar",
"Sudan",
"Afghanistan",
"Congo",
"Greece",
"Argentinia",
"Italy",
"Brazil",
"India",
"China",
"South Africa",
"Spain",
"Cape Verde",
"Bhutan",
"Rwanda",
"France",
"Botswana",
"France",
"US",
"Germany",
"Britain",
"Barbados",
"Japan",
"Norway",
"New Zealand",
"Sigapore"))) +
scale_x_continuous(name = "Corruption Perception Index, 2011 (10=least corrupt)",
limits = c(1.0, 10.0),
breaks = 1:10) +
scale_y_continuous(name = "Human Development Index, 2011 (1=best)",
limits = c(0.2, 1.0),
breaks = seq(0.2, 1.0, by = 0.1)) +
scale_color_manual(name = "",
values = c("#24576D",
"#099DD7",
"#28AADC",
"#248E84",
"#F2583F",
"#96503F"),
guide = guide_legend(nrow = 1)) +
scale_alpha_discrete(range = c(0, 1),
guide = FALSE) +
scale_linetype(name = "",
breaks = "r2",
labels = list(bquote(R^2==.(mR2))),
guide = guide_legend(override.aes = list(linetype = 1, size = 2, color = "red"))) +
ggtitle("Corruption and human development") +
theme_bw() +
theme(panel.border = element_blank(),
panel.grid = element_blank(),
panel.grid.major.y = element_line(color = "gray"),
axis.line.x = element_line(color = "gray"),
axis.text = element_text(face = "italic"),
legend.position = "top",
legend.direction = "horizontal",
legend.box = "horizontal",
legend.text = element_text(size = 12),
plot.title = element_text(size = 16, face = "bold"))
p
dev.off()
df <- data.frame(
x = runif(100),
y = runif(100),
z1 = rnorm(100)
)
p1 <- ggplot(df, aes(x, y))+
geom_point(aes(color = z1))
p2 <- ggplot(df, aes(x, y))+
geom_point(aes(color = z1))+
scale_color_steps(low = 'skyblue',
high = 'blue')
p3 <- ggplot(df, aes(x, y))+
geom_point(aes(color = z1))+
scale_color_steps2()
p4 <- ggplot(df, aes(x, y))+
geom_point(aes(color = z1))+
scale_color_stepsn(colors = terrain.colors(10))
plot_grid(p1, p2, p3, p4, labels = LETTERS[1:4], nrow = 2)
plot_grid(p1, p2, p3, p4, labels = LETTERS[1:4], nrow = 2)
library(cowplot)
plot_grid(p1, p2, p3, p4, labels = LETTERS[1:4], nrow = 2)
?terrain.colors
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
d <- ggplot(dsamp,
aes(carat, price))+
geom_point(aes(color = clarity))
p1 <- d + scale_color_hue()
p2 <- d + scale_color_hue('Clarity')
p3 <- d + scale_color_hue(expression(clarity[beta]))
d + scale_color_hue(l = 40, c = 30)
plot_grid(d, p1, p2, p3, labels = LETTERS[1:4], nrow = 2)
d + scale_color_hue(expression(clarity[i]))
p1 <- d + scale_colour_hue(l = 40, c = 30)
p2 <- d + scale_colour_hue(l = 70, c = 30)
p3 <- d + scale_colour_hue(l = 70, c = 150)
p4 <- d + scale_colour_hue(l = 80, c = 150)
plot_grid(p1, p2, p3, p4, labels = LETTERS[1:4], nrow = 2)
plot_grid(p1, p2, p3, p4, labels = LETTERS[1:4], nrow = 2)
p1 <- d + scale_colour_hue(l = c(0, 90))
p2 <- d + scale_colour_hue(l = c(90, 180))
d <- ggplot(dsamp, aes(carat, price, colour = clarity))
p2 <- d + geom_point(alpha = 0.9)
p3 <- d + geom_point(alpha = 0.5)
p4 <- d + geom_point(alpha = 0.2)
plot_grid(p2, p3, p4, labels = LETTERS[1:4], nrow = 3)
p2 <- d + geom_point(alpha = 0.9)
p3 <- d + geom_point(alpha = 0.5)
p4 <- d + geom_point(alpha = 0.2)
p2 <- d + geom_point(alpha = 0.9)
plot_grid(p2, p3, p4, labels = LETTERS[1:4], nrow = 3)
#给 NA 值设置特殊的颜色
miss <- factor(sample(c(NA, 1:5),
nrow(mtcars),
replace = T))
p1 <- ggplot(mtcars,
aes(mpg, wt))+
geom_point(aes(color = miss))
p2 <- ggplot(mtcars,
aes(mpg, wt))+
geom_point(aes(color = miss))+
scale_color_hue(na.value = 'black')
plot_grid(p1, p2, labels = LETTERS[1:4], nrow = 2)
dsamp
ggplot(dsamp,
aes(carat, price))+
geom_point(aes(color = clarity))
# 设置配色和标签
p1 <- d + scale_colour_viridis_d("City\nCenter")
# 选择调色板，使用 ?scales::viridis_pal 获取更多细节
p2 <- d + scale_colour_viridis_d(option = "plasma")
p3 <- d + scale_colour_viridis_d(option = "inferno")
plot_grid(d, p1, p2, p3, labels = LETTERS[1:4], nrow = 2)
d <- ggplot(data = txsamp, aes(x = sales, y = median)) +
geom_point(aes(colour = city))
# viridis_d 用于离散数据
txsamp <- subset(txhousing, city %in%
c("Houston", "Fort Worth", "San Antonio", "Dallas", "Austin"))
d <- ggplot(data = txsamp, aes(x = sales, y = median)) +
geom_point(aes(colour = city))
# 设置配色和标签
p1 <- d + scale_colour_viridis_d("City\nCenter")
# 选择调色板，使用 ?scales::viridis_pal 获取更多细节
p2 <- d + scale_colour_viridis_d(option = "plasma")
p3 <- d + scale_colour_viridis_d(option = "inferno")
plot_grid(d, p1, p2, p3, labels = LETTERS[1:4], nrow = 2)
# 设置填充色
p <- ggplot(txsamp, aes(x = median, fill = city)) +
geom_histogram(position = "dodge", binwidth = 15000)
p1 <- p + scale_fill_viridis_d()
# 反转颜色
p2 <- p + scale_fill_viridis_d(direction = -1)
plot_grid(p1, p2, labels = LETTERS[1:4], nrow = 2)
# 连续型数据
v <- ggplot(faithfuld) +
geom_tile(aes(waiting, eruptions, fill = density))
p2 <- v + scale_fill_viridis_c()
p3 <- v + scale_fill_viridis_c(option = "plasma")
# 分箱数据
p4 <- v + scale_fill_viridis_b()
plot_grid(v, p2, p3, p4, labels = LETTERS[1:4], nrow = 2)
faithfuld
v <- ggplot(faithfuld, aes(waiting, eruptions, fill = density)) +
geom_tile()
p1 <- v + scale_fill_continuous(type = "gradient")
p2 <- v + scale_fill_continuous(type = "viridis")
p3 <- v + scale_fill_gradient()
p4 <- v + scale_fill_viridis_c()
plot_grid(p1, p2, p3, p4, labels = LETTERS[1:4], nrow = 2)
